// For publishing to maven central
apply plugin: 'maven'
apply plugin: 'signing'
//For just this project
apply plugin: 'java'

group = 'com.owlab'
archivesBaseName = "weak-rest-client"
version = "1.0"

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    compile "org.apache.httpcomponents:httpcore:4.1.2"
    compile "org.apache.httpcomponents:httpclient:4.1.2"
    compile "com.fasterxml.jackson.core:jackson-core:2.1.1"
    compile "com.fasterxml.jackson.core:jackson-databind:2.1.1"
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.12'
    compile 'org.slf4j:slf4j-simple:1.7.12'

    testCompile 'junit:junit:4.12'
}

// For publishing to maven central
task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

//signing {
//    sign configurations.archives
//}
//
//uploadArchives {
//  repositories {
//    mavenDeployer {
//      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
//
//      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
//        authentication(userName: ossrhUsername, password: ossrhPassword)
//      }
//
//      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
//        authentication(userName: ossrhUsername, password: ossrhPassword)
//      }
//
//      pom.project {
//        name 'A weak rest client'
//        packaging 'jar'
//        // optionally artifactId can be defined here 
//        description 'A application used as an example on how to set up pushing  its components to the Central Repository.'
//        url 'http://www.example.com/example-application'
//
//        scm {
//          connection 'scm:svn:http://foo.googlecode.com/svn/trunk/'
//          developerConnection 'scm:svn:https://foo.googlecode.com/svn/trunk/'
//          url 'http://foo.googlecode.com/svn/trunk/'
//        }
//
//        licenses {
//          license {
//            name 'The Apache License, Version 2.0'
//            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
//          }
//        }
//
//        developers {
//          developer {
//            id 'manfred'
//            name 'Manfred Moser'
//            email 'manfred@sonatype.com'
//          }
//        }
//      }
//    }
//  }
//}
